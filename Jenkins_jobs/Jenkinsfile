pipeline {
	agent any

	stages {
		stage ('Fetch code') {
			steps {
				git branch: 'jenkins_branch', url: 'https://github.com/fanfanafankianki/gym_progress_site.git'
			}
		}
		stage ('Build') {
			steps {
				sh 'ls'
				sh 'pwd'
			}
			post {
				success {
					echo "Now archiving..."
					archiveArtifacts artifacts: '*/**', excludes: 'README.md'
				}
			}
		}

        stage('SonarQube analysis 1') {
        	environment {
        		scannerHome = tool 'sonar4.7'
        	}

        	steps {
                withSonarQubeEnv('sonar') {
					sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=GymSite \
					-Dsonar.projectName=GymSite \
					-Dsonar.projectVersion=1.0 \
					-Dsonar.sources=. \
					-Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
					-Dsonar.junit.reportsPath=target/surefire-reports/ \
					-Dsonar.jacoco.reportsPath=target/jacoco.exec \
					-Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
              	}
        	}
        }
        stage('Quality gate') {
        	steps {
        		timeout(time: 1, unit: 'HOURS') {
        			waitForQualityGate abortPipeline: true
        		}
        	}
        }	

		stage('Pack to archive') {
		    steps {
		        script {
		            sh "tar -czvf my-archive.tar.gz css database images js_functions php_functions index.php"
		        }
		        archiveArtifacts artifacts: 'my-archive.tar.gz', onlyIfSuccessful: true
		    }
		}

        stage('Store Artifacts') {
        	steps {
				nexusArtifactUploader(
					nexusVersion: 'nexus3',
					protocol: 'http',
					nexusUrl: '3.252.187.171:8081',
					groupId: 'QA',
					version: "${env.BUILD_ID}-${env.BUILD_TIMESTAMP}",
					repository: 'JenkinsGymSiteArtifacts-repo',
					credentialsId: 'NexusLogin',
					artifacts: [
							[artifactId: 'GymSite',
							classifier: '',
							file: 'my-archive.tar.gz',
							type: 'gz']
						]
				)
        	}
        }	
	}
}